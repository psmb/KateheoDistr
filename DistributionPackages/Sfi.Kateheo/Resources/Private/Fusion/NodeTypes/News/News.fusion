prototype(Sfi.Kateheo:News) < prototype(Sfi.Kateheo:AbstractDocument) {
	body = Neos.Neos:ContentComponent {
		authorName = Neos.Fusion:Collection {
			collection = ${node.properties.authors}
			itemName = 'author'
			itemRenderer = Neos.Fusion:Tag {
				tagName = 'a'
				attributes.href = Neos.Neos:NodeUri {
					node = ${author}
				}
				content = ${String.stripTags(author.properties.title) + ' '}
				@if.setAuthor = ${author}
			}
		}

		authorInfo = Neos.Fusion:Collection {
			collection = ${node.properties.authors}
			itemName = 'author'
			itemRenderer = Sfi.Kateheo:News.AuthorInfo
		}

		cover = Neos.Neos:ContentCollection{
			nodePath = 'coverCollection'
			prototype(Neos.NodeTypes:Image){
				maximumWidth = 980
				maximumHeight = 653
				allowCropping = TRUE
			}
		}

		main = Neos.Neos:ContentCollection {
			nodePath = 'main'
		}

		@context.main = ${this.main}
		readingTimeIndicator = Sfi.Kateheo:ReadingTime {
			content = ${main}
		}

		date = ${Date.formatCldr(node.properties.date, 'dd MMMM yyyy')}

		nav = Neos.Fusion:Component {
			prev = Sfi.Kateheo:News.ShortForNav {
				mode = 'prev'
				@context.node = Neos.Fusion:Value {
					inCurrent = ${q(node).prev('[instanceof Sfi.Kateheo:News]').get(0)}
					value = ${this.inCurrent || q(node).parent('[instanceof Sfi.Kateheo:PrimarySection]').prev('[instanceof Sfi.Kateheo:Category]').children('[instanceof Sfi.Kateheo:News]').last().get(0)}
				}
			}
			next = Sfi.Kateheo:News.ShortForNav {
				mode = 'next'
				@context.node = Neos.Fusion:Value {
					inCurrent = ${q(node).next('[instanceof Sfi.Kateheo:News]').get(0)}
					value = ${this.inCurrent || q(node).parent('[instanceof Sfi.Kateheo:PrimarySection]').next('[instanceof Sfi.Kateheo:Category]').children('[instanceof Sfi.Kateheo:News]').first().get(0)}
				}
			}
			renderer = afx`
				{props.style}
				<div style="display:flex; flex-wrap: wrap; margin: 24px -12px">
					<div class="navItem" style="padding: 0 12px">{props.prev}</div>
					<div class="navItem" style="padding: 0 12px; text-align: right">{props.next}</div>
				</div>
			`
			style = ${'<style>
				.navItem {
					flex-basis: 100%;
				}
				@media screen and (min-width: 640px) {
					.navItem {
						flex-basis: 50%;
					}
				}
			</style>'}
		}

		primarySections = Sfi.Kateheo:PrimarySections {
			mode = 'front'
			@context.currentSection = ${q(node).parents('[instanceof Sfi.Kateheo:PrimarySection]').get(0)}
		}

		tagsList = Neos.Fusion:Collection {
			collection = ${node.properties.tags}
			itemName = 'node'
			itemRenderer = Neos.Fusion:Component {
				link = Neos.Neos:NodeUri {
					node = ${node}
				}
				title = ${node.properties.title}
				renderer = afx`
					<a class="color-primary ParagraphAlt--Large" style="margin-right: 12px" href={props.link}>#{props.title} </a>
				`
				@if.notEmpty = ${node.properties.title}
			}
		}

		renderer = afx`
			<div class="Paper-Article">
				<div class="Article" style="margin-bottom: 60px">
					<div class="row">
						<div class="large-10 large-offset-1 columns">
							<div class="textAlign-center">
								<div class="Service--Large">{props.authorName}</div>
								<h1 class="H1 textAlign-center" style="margin-bottom: 24px"><Neos.Neos:Editable property="title" block={false}/></h1>
								<div class="ServiceEm"><Neos.Neos:Editable property="teaser" block={false}/></div>
								<span class="ServiceEm" style="text-transform: lowercase;">{props.date}<span class="color-grayLight">{props.readingTimeIndicator && ' â€¢ ' + props.readingTimeIndicator}</span></span>
							</div>
							<div class="color-primary"><Neos.Neos:Editable property="lead"/></div>
							{props.cover}
						</div>
					</div>
					<div class="row">
						<div class="large-8 medium-10 large-offset-2 medium-offset-1 columns">
							<div class="Article-Content">{props.main}</div>
							<div>{props.tagsList}</div>
							{props.authorInfo}
						</div>
					</div>
					{props.nav}
					{props.primarySections}
				</div>
			</div>
		`
	}
}
