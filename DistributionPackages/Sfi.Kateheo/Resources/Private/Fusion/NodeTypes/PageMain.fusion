prototype(Sfi.Kateheo:PageMain) < prototype(Sfi.Kateheo:AbstractDocument) {
	prototype(Psmb.Carousel:Carousel).@process.wrap = afx`<div class="backgroundColor-kateheo">{value}</div>`
	body.content = Neos.Fusion:Component {
		main = Neos.Neos:ContentCollection{
			nodePath = 'main'
		}

		primarySections = Sfi.Kateheo:PrimarySections {
			mode = 'front'
		}

		newsList = Flowpack.Listable:Collection {
			@process.styles = ${'<style>
				.newsList {
					display: flex;
					flex-wrap: wrap;
					margin: -12px;
				}
				.newsList-item {
					flex-basis: 100%;
					padding: 12px;
				}
				@media screen and (min-width:640px) {
					.newsList-item {
						flex-basis: 50%;
					}
				}
				@media screen and (min-width:1024px) {
					.newsList-item {
						flex-basis: 33.33%;
					}
				}
				@media screen and (min-width:1024px) {
					.newsList-item:nth-child(4) {
						display: none;
					}
				}
			</style>' + value}
			listClass = 'newsList'
			itemClass = 'newsList-item'
			itemRenderer = Flowpack.Listable:ContentCaseShort
			collection = ${Search.query(site).nodeType("Sfi.Kateheo:News").sortDesc('date').from(0).limit(4).execute().toArray()}
		}

		announceList = Flowpack.Listable:Collection {
			@process.styles = ${'<style>
				.newsList {
					display: flex;
					flex-wrap: wrap;
					margin: -12px;
				}
				.newsList-item {
					flex-basis: 100%;
					padding: 12px;
				}
				@media screen and (min-width:640px) {
					.newsList-item {
						flex-basis: 50%;
					}
				}
				@media screen and (min-width:1024px) {
					.newsList-item {
						flex-basis: 33.33%;
					}
				}
				@media screen and (min-width:1024px) {
					.newsList-item:nth-child(4) {
						display: none;
					}
				}
			</style>' + value}
			listClass = 'newsList'
			itemClass = 'newsList-item'
			itemRenderer = Flowpack.Listable:ContentCaseShort
			collection = ${Search.query(site).nodeType("Sfi.Kateheo:Announce").sortDesc('date').from(0).limit(4).execute().toArray()}
		}

		soundCloudPlayer = Sfi.Kateheo:SoundCloudPlayer {
			soundCloudLink = ${site.properties.soundCloudLink}
		}

		newsArchiveUri = Neos.Neos:NodeUri {
			node = ${q(site).children('[uriPathSegment = "archiv"]').get(0)}
		}
		announceArchiveUri = Neos.Neos:NodeUri {
			node = ${q(site).children('[uriPathSegment = "announce"]').get(0)}
		}
		audioUri = Neos.Neos:NodeUri {
			node = ${q(site).children('[uriPathSegment = "archiv"]').get(0)}
			additionalParams {
				type = 'audio'
			}
		}

		renderer = afx`
			{props.style}
			<div style="display:flex; flex-direction: column">
				<div style="margin-bottom: 48px">
					{props.main}
				</div>
				<div class="primarySectionsMain" style="margin-bottom: 48px">{props.primarySections}</div>
				<div style="background-color: #EDEDED; padding: 36px 24px; margin-bottom: 48px">
					<div class="row">
						<div class="columns medium-4">
							<a href={props.audioUri}>
								<h3 class="H2 color-black">Аудио</h3>
								<p class="ServiceEm--Large color-black" style="margin-top: 24px">Лекции и беседы в аудио-формате</p>
								<div style="margin: 24px 0; border: 2px solid black; color: black; font-size: 20px; width: 100px; text-align: center;">⟶</div>
							</a>
						</div>
						<div class="columns medium-8">
							{props.soundCloudPlayer}
						</div>
					</div>
				</div>
				<h3 class="H2 color-grayLight" style="margin-bottom: 12px">Анонсы</h3>
				{props.announceList}
				<div class="LinkHover ParagraphAlt--Small color-grayLight" style="margin-bottom: 24px">
					<a href={props.announceArchiveUri}>Архив анонсов сайта ›</a>
				</div>
				<h3 class="H2 color-grayLight" style="margin-bottom: 12px">Новости</h3>
				{props.newsList}
				<div class="LinkHover ParagraphAlt--Small color-grayLight" style="margin-bottom: 24px">
					<a href={props.newsArchiveUri}>Архив всех материалов сайта ›</a>
				</div>
			</div>
		`
		style = ${'<style>
		@media screen and (max-width: 640px) {
			.primarySectionsMain {
				order: -1;
			}
		}
		</style>'}
	}
}
