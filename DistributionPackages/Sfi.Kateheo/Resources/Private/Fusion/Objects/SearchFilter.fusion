prototype(Sfi.Kateheo:SearchFilter) < prototype(Neos.Fusion:Component) {
	tagsList = Neos.Fusion:Collection {
		collection = ${Array.slice(Array.shuffle(q(site).find('[instanceof Sfi.Kateheo:Tags]').get()), 0, 5)}
		itemName = 'node'
		itemRenderer = Neos.Fusion:Component {
			nodeUri = Neos.Neos:NodeUri {
				node = ${node}
			}
			title = ${node.properties.title}
			renderer = afx`
				<a
					href={props.nodeUri}
					style="
						font-size: 14px;
						text-tranform: uppercase;
						font-family: var(--fontFamily-alt);
						margin-right: 18px;
					"
					>
					#{props.title}
				</a>
			`
		}
		@cache {
			mode = 'uncached'
			context {
				1 = 'site'
			}
		}
	}
	authorsList = Neos.Fusion:Collection {
		collection = ${Array.slice(Array.shuffle(q(site).find('[instanceof Sfi.Kateheo:Author]').get()), 0, 5)}
		itemName = 'node'
		itemRenderer = Neos.Fusion:Component {
			nodeUri = Neos.Neos:NodeUri {
				node = ${node}
			}
			title = ${String.replace(node.properties.title, ' ', '&nbsp;')}
			renderer = afx`
				<a
					href={props.nodeUri}
					style="
						font-size: 14px;
						text-tranform: uppercase;
						font-family: var(--fontFamily-alt);
						margin-right: 12px;
					"
					>
					#{props.title}&shy;
				</a>
			`
		}
		@cache {
			mode = 'uncached'
			context {
				1 = 'site'
			}
		}
	}
	facetTypes = Sfi.Kateheo:FacetsFilter
	nodeUri = Neos.Neos:NodeUri {
		node = ${q(site).children('[uriPathSegment = "archiv"]').get(0)}
	}
	query = ${request.arguments.q}
	renderer = afx`
		<div class="color-white" style="padding: 36px 12px; background-color: rgb(25, 25, 25)">
			<div class="fixedWidth">
				<div class="row">
					<div class="columns">
						<form
							method="get"
							action={props.nodeUri}
							style="position: relative"
							>
							<input class="search-input"
								name="q"
								style="
									padding: 12px 24px;
									margin: 12px 0;
									width: 100%;
									background: rgba(255,255,255,0.9);
									border-radius: 3px;
									border: 3px solid var(--color-kateheo);
									box-shadow: 0 0 6px var(--color-kateheo);
									font-size: 36px;
									font-style: italic;
									font-family: var(--fontFamily-main)
								"
								placeholder="поиск"
								value={props.query}
								/>
							<button type="submit" class="search-submit" style="position: absolute; right: 0; top: 14px; padding: 20px; cursor: pointer;">
								<svg fill="#828282" width="32" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024">
									<path d="M428.9 762.5c184.2 0 333.6-149.4 333.6-333.6S613.2 95.3 428.9 95.3 95.3 244.7 95.3 428.9s149.4 333.6 333.6 333.6zm345.4-79.2l230.9 230.9c25.1 25.1 25.1 65.9 0 91-25.1 25.1-65.9 25.1-91 0L683.3 774.3c-73.6 54.4-162.8 83.7-254.4 83.5C192 857.8 0 665.8 0 428.9S192 0 428.9 0s428.9 192 428.9 428.9c.2 91.6-29.1 180.7-83.5 254.4z"/>
								</svg>
							</button>
						</form>
						{props.tagsList}
						<div style="margin-top: 0px">
							{props.authorsList}
						</div>
						<div style="margin-top: 24px">
							{props.facetTypes}
						</div>
					</div>
				</div>
			</div>
		</div>
	`
	@process.style = ${'<style>
		.search-input:focus {
			background-color: white !important;
			color: black !important;
		}
		.search-input::placeholder {
			color: var(--color-grayLight);
		}
		.search-submit:focus {
			outline: 0;
		}
		.search-submit:hover svg {
			fill: rgb(25, 25, 25);
		}
	</style>' + value}
}

prototype(Sfi.Kateheo:FacetTypes) < prototype(Neos.Fusion:RawArray) {
	audio = ${{type: 'Sfi.Kateheo:Audio', label: 'Аудио'}}
	article = ${{type:'Sfi.Kateheo:Article', label: 'Доклады'}}
	news = ${{type: 'Sfi.Kateheo:News', label: 'Новости'}}
}

prototype(Sfi.Kateheo:FacetsFilter) < prototype(Neos.Fusion:Collection) {
	@process.wrap = Neos.Fusion:Component {
		nodeUri = Neos.Neos:NodeUri {
			node = ${node}
		}
		renderer = afx`<div><a class={'FacetTypesNav-item Service ' + (request.arguments.type ? '' : 'isActive')} style="margin-right: 36px" href={props.nodeUri}>Все</a>{value}</div>`
	}
	collection = Sfi.Kateheo:FacetTypes
	itemName = 'facetConfig'
	itemKey = 'facetType'
	itemRenderer = Neos.Fusion:Component {
		nodeUri = Neos.Neos:NodeUri {
			node = ${node}
			additionalParams {
				type = ${facetType}
				q = ${request.arguments.q}
			}
		}
		title = ${facetConfig.label}
		renderer = afx`
			{value}
			<a class={'FacetTypesNav-item Service ' + (request.arguments.type == facetType && 'isActive')} style="margin-right: 36px" href={props.nodeUri}>{props.title}</a>
		`
	}
	@process.styles = ${'<style>
	.FacetTypesNav-item.isActive {
		text-decoration: underline;
	}
	</style>' + value}
}